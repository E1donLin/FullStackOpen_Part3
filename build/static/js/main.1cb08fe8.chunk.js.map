{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","newSearch","handleSearch","value","onChange","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","PersonForm","newName","handleNewName","newNumber","handleNewNumber","addPerson","type","onClick","Persons","personsToShow","handleDelete","personsList","map","person","name","number","id","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","remove","delete","update","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","Message","setMessage","useEffect","initialPersons","filter","includes","event","target","preventDefault","newPerson","personExist","find","window","confirm","returnedPerson","setTimeout","catch","concat","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cb08fe8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ newSearch, handleSearch }) => {\r\n  return (\r\n    <form>\r\n      filter shown with\r\n      <input value={newSearch} onChange={handleSearch} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  const messageStyle = {\r\n    color: 'red',\r\n    background: 'lightGray',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return <div style={messageStyle}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({\r\n  newName,\r\n  handleNewName,\r\n  newNumber,\r\n  handleNewNumber,\r\n  addPerson,\r\n}) => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNewName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNewNumber} />\r\n      </div>\r\n      <div>\r\n        <button type='submit' onClick={addPerson}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = ({ personsToShow, handleDelete }) => {\r\n  const personsList = personsToShow.map((person) => {\r\n    return (\r\n      <div key={person.name}>\r\n        {person.name} {person.number}\r\n        <button onClick={() => handleDelete(person.id, person.name)}>\r\n          delete\r\n        </button>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return <div>{personsList}</div>\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst personService = {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update,\r\n}\r\n\r\nexport default personService\r\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  const [Message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const personsToShow = persons.filter((person) =>\n    person.name.includes(newSearch)\n  )\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    const personExist = persons.find((person) => person.name === newName)\n    if (personExist) {\n      window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      ) &&\n        personService\n          .update(personExist.id, newPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== returnedPerson.id ? person : returnedPerson\n              )\n            )\n            setNewName('')\n            setNewNumber('')\n            setMessage(`Updated ${returnedPerson.name}'s number`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(() => {\n            setMessage(\n              `Information of ${personExist.name} has already been removed from server`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setPersons(persons.filter((person) => person.id !== personExist.id))\n          })\n      return\n    }\n\n    personService\n      .create(newPerson)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch((error) => {\n        console.log(error.response.data)\n        setMessage(error.response.data.error)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleDelete = (id, name) => {\n    window.confirm(`Delete ${name} ?`) &&\n      personService.remove(id).then(() => {\n        setPersons(persons.filter((person) => person.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={Message} />\n      <Filter newSearch={newSearch} handleSearch={handleSearch} />\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n        addPerson={addPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons personsToShow={personsToShow} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}